import{a as E,S as w,i as c}from"./assets/vendor-CrlV4O_2.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function n(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(e){if(e.ep)return;e.ep=!0;const o=n(e);fetch(e.href,o)}})();const O="50507982-c6a73d82cfbe0bce0234dfd9b",$="https://pixabay.com/api/";async function p(r,t=1,n=40){const s={key:O,q:r,image_type:"photo",orientation:"horizontal",safesearch:!0,page:t,per_page:n};try{return(await E.get($,{params:s})).data}catch(e){throw e}}const m=document.getElementById("gallery"),g=document.getElementById("loader");let u;function h(r){const t=r.map(({webformatURL:n,largeImageURL:s,tags:e,likes:o,views:i,comments:v,downloads:I})=>`
        <a class="photo-card" href="${s}">
          <img src="${n}" alt="${e}" loading="lazy" />
          <div class="info">
            <p><b>Likes:</b> ${o}</p>
            <p><b>Views:</b> ${i}</p>
            <p><b>Comments:</b> ${v}</p>
            <p><b>Downloads:</b> ${I}</p>
          </div>
        </a>
      `).join("");m.insertAdjacentHTML("beforeend",t),u?u.refresh():u=new w(".gallery a",{captionsData:"alt",captionDelay:250})}function B(){m.innerHTML=""}function y(){g.classList.remove("hidden")}function b(){g.classList.add("hidden")}const S=document.getElementById("search-form"),l=document.getElementById("guard");let a="",d=1,L=0;S.addEventListener("submit",x);async function x(r){if(r.preventDefault(),a=r.currentTarget.searchQuery.value.trim(),!!a){d=1,B(),f.unobserve(l),y();try{const t=await p(a,d);if(L=t.totalHits,t.hits.length===0){c.info({title:"Info",message:"No images found.",position:"topRight"});return}h(t.hits),f.observe(l)}catch{c.error({title:"Error",message:"Failed to fetch images.",position:"topRight"})}finally{b()}}}const A={root:null,rootMargin:"200px",threshold:1},f=new IntersectionObserver(M,A);async function M(r){for(const t of r)if(t.isIntersecting){d++,y();try{const n=await p(a,d);h(n.hits),document.querySelectorAll(".gallery a").length>=L&&(c.info({title:"End",message:"No more images.",position:"topRight"}),f.unobserve(l))}catch{c.error({title:"Error",message:"Loading more images failed.",position:"topRight"}),f.unobserve(l)}finally{b()}}}
//# sourceMappingURL=index.js.map
